from pathlib import Path
from typing import Union

from fastapi import FastAPI, Request, HTTPException
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates


def serve_react_app(app: FastAPI, build_dir: Union[Path, str]) -> FastAPI:
    """Serves a React application in the root directory `/`

    Args:
        app: FastAPI application instance
        build_dir: React build directory (generated by `yarn build` or
            `npm run build`)

    Returns:
        FastAPI: instance with the react application added

    Raises:
        ValueError: if `build_dir` is not a valid directory
    """
    if isinstance(build_dir, str):
        build_dir = Path(build_dir)

    if not build_dir.is_dir():
        raise ValueError(f"{build_dir} is not a valid directory")

    if not (build_dir / "index.html").exists():
        raise ValueError(f"{build_dir} does not contain an index.html file")
    
    app.mount(
        "/",
        StaticFiles(directory=build_dir, html=True),
        name="index",
    )
    templates = Jinja2Templates(directory=build_dir.as_posix())

    @app.route("/{full_path:path}")
    async def serving_react_app(request: Request, full_path: str):
        """Serve the react app
        `full_path` variable is necessary to serve each possible endpoint with
        `index.html` file in order to be compatible with `react-router-dom
        """
        if not (build_dir / "index.html").exists():
            raise HTTPException(status_code=404, detail="React app not found")
        return templates.TemplateResponse(request, "index.html")

    return app
